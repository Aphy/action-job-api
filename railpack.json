{
  "$schema": "https://schema.railpack.com",

  "steps": {
    "install": {
      "inputs": [
        { "image": "ghcr.io/railwayapp/railpack-runtime:latest" },
        { "local": true, "include": ["."] }
      ],
      "commands": [
        { "image": "docker.io/library/composer:2", "src": "/usr/bin/composer", "dest": "/usr/local/bin/composer" },
        { "path": "/usr/local/bin" },
        { "cmd": "composer --version" },
        { "cmd": "composer install --working-dir=/app/api --no-dev --prefer-dist --no-interaction --optimize-autoloader --no-scripts -vvv" }
      ],
      "deployOutputs": [
        { "include": ["/app/api/vendor"] }
      ]
    },

    "build": {
      "inputs": [
        { "step": "install" }
      ],
      "commands": []
    },

    "migrate": {
      "inputs": [
        { "step": "build" }
      ],
      "commands": [
        "sh -lc 'for i in $(seq 1 60); do php /app/api/bin/console doctrine:database:create --if-not-exists --no-interaction >/dev/null 2>&1 && exit 0 || { echo \"DB not readyâ€¦ ($i)\"; sleep 2; }; done; echo \"DB not ready after timeout\"; exit 1'",
        "php /app/api/bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration",
        "php /app/api/bin/console cache:warmup --env=prod"
      ]
    }
  },

  "deploy": {
    "base": { "image": "ghcr.io/railwayapp/railpack-runtime:latest" },
    "inputs": [
      { "step": "migrate" }
    ],
    "variables": {
      "APP_ENV": "prod",
      "RAILPACK_PHP_ROOT_DIR": "api/public"
    },
    "startCommand": "/start-container.sh"
  }
}
